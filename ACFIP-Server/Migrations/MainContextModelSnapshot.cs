// <auto-generated />
using System;
using ACFIP_Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ACFIP_Server.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ACFIP_Server.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_time");

                    b.Property<bool>("DeletedFlag")
                        .HasColumnType("bit")
                        .HasColumnName("deleted_flag");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hashed_password");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("salt");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedFlag = false,
                            HashedPassword = "yntcko9S08SPcAriNcWPPlFDEuRD92F82IbcGNqj9duPFxX4P36TR/OtoHgP0oHtsvAxIeV/7FRS4c025LfhKw==",
                            IsActive = true,
                            RoleId = 1,
                            Salt = new byte[] { 72, 74, 29, 133, 5, 228, 63, 114, 149, 56, 6, 17, 4, 251, 12, 105 }
                        });
                });

            modelBuilder.Entity("ACFIP_Server.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<bool>("DeletedFlag")
                        .HasColumnType("bit")
                        .HasColumnName("deleted_flag");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("area");
                });

            modelBuilder.Entity("ACFIP_Server.Models.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int>("ConfigId")
                        .HasColumnType("int")
                        .HasColumnName("configuration_id");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("connection_string");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_time");

                    b.Property<bool>("DeletedFlag")
                        .HasColumnType("bit")
                        .HasColumnName("deleted_flag");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ConfigId");

                    b.HasIndex("GroupId");

                    b.ToTable("camera");
                });

            modelBuilder.Entity("ACFIP_Server.Models.CameraConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<float>("Angle")
                        .HasColumnType("real")
                        .HasColumnName("angle");

                    b.Property<float>("Height")
                        .HasColumnType("real")
                        .HasColumnName("height");

                    b.HasKey("Id");

                    b.ToTable("camera_configuration");
                });

            modelBuilder.Entity("ACFIP_Server.Models.GroupCamera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id")
                        .UseIdentityColumn();

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("area_id");

                    b.Property<bool>("DeletedFlag")
                        .HasColumnType("bit")
                        .HasColumnName("deleted_flag");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("group_camera");
                });

            modelBuilder.Entity("ACFIP_Server.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Monitor"
                        });
                });

            modelBuilder.Entity("ACFIP_Server.Models.ViolationCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_time");

                    b.Property<int>("GroupCamId")
                        .HasColumnType("int")
                        .HasColumnName("group_cam_id");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_url");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("video_url");

                    b.HasKey("Id");

                    b.HasIndex("GroupCamId");

                    b.ToTable("violation_case");
                });

            modelBuilder.Entity("ACFIP_Server.Models.ViolationCaseType", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnType("int")
                        .HasColumnName("case_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.HasKey("CaseId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("violation_case_violation_type");
                });

            modelBuilder.Entity("ACFIP_Server.Models.ViolationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("violation_type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vest"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Helmet"
                        });
                });

            modelBuilder.Entity("ACFIP_Server.Models.Account", b =>
                {
                    b.HasOne("ACFIP_Server.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ACFIP_Server.Models.Camera", b =>
                {
                    b.HasOne("ACFIP_Server.Models.CameraConfiguration", "Config")
                        .WithMany()
                        .HasForeignKey("ConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ACFIP_Server.Models.GroupCamera", "GroupCamera")
                        .WithMany("Cameras")
                        .HasForeignKey("GroupId");

                    b.Navigation("Config");

                    b.Navigation("GroupCamera");
                });

            modelBuilder.Entity("ACFIP_Server.Models.GroupCamera", b =>
                {
                    b.HasOne("ACFIP_Server.Models.Area", "Area")
                        .WithMany("GroupCameras")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("ACFIP_Server.Models.ViolationCase", b =>
                {
                    b.HasOne("ACFIP_Server.Models.GroupCamera", "GroupCamera")
                        .WithMany()
                        .HasForeignKey("GroupCamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupCamera");
                });

            modelBuilder.Entity("ACFIP_Server.Models.ViolationCaseType", b =>
                {
                    b.HasOne("ACFIP_Server.Models.ViolationCase", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ACFIP_Server.Models.ViolationType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ACFIP_Server.Models.Area", b =>
                {
                    b.Navigation("GroupCameras");
                });

            modelBuilder.Entity("ACFIP_Server.Models.GroupCamera", b =>
                {
                    b.Navigation("Cameras");
                });
#pragma warning restore 612, 618
        }
    }
}
